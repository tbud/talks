Reason for Build tbud
build a golang application framework, inspired by typesafe

Peng Yi
peace0phmind@gmail.com

* About me

I used *scala*, *sbt*, *playframework*, *akka*, *slick*, *AngularJS* etc. to write [[https://github.com/ofpay/bugatti][bugatti]] from Oct 2013.

*Bugatti* is a DevOps solution in our company. It has such feature:

- Use salt at the backgroud to control VM.
- Use template to reflect the UI and connect with salt script.
- Support LDAP 
- Use a submodule *spirit* replace *salt-syndic* to support distributed.

* Cons of scala

When I develop this deploy tool, I found some cons of scala that I couldn't bear.

- Steep learning curve
	In our company, there's only 3 colleagues could use scala, and it's hard to popularize. We refactor bugatti at least 5 times in the past one year.
- Wait everywhere
	A submodule called spirit with 7 files and 1k code line use 6 seconds to compile. When I run sbt, I wait. When I test with playframework, I wait.
- Large package size
	The module spirit's one-jar package has at least 20MB size.

I restart to find a light, faster, easy to leaning language. I found *golang*. But there isn't an application framework like I had used in scala. So I began using golang to write [[https://github.com/tbud/][tbud]] in Jan 2015.

* Outline
- Pros in using golang
- Pros in using scala
- Mix all the pros is tbud
- Aim of tbud

* Pros in using golang
- Easy to learn
- Faster compile speed
- Smaller package size
- Easy to deploy
- With wonderful tool in golang sdk
- DRY

_Why_use_scoped__ptr_? Use plain ***ptr* instead.
