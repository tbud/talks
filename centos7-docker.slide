docker in centos7

Peng Yi
peace0phmind@gmail.com

* install and start

install

	sudo yum install docker

Starting the Docker daemon

	sudo service docker start
	sudo chkconfig docker on

FirewallD

	CentOS-7 introduced firewalld, which is a wrapper around iptables and can conflict with Docker.

	When firewalld is started or restarted it will remove the DOCKER chain from iptables, preventing 
	Docker from working properly.

	When using Systemd, firewalld is started before Docker, but if you start or restart firewalld 
	after Docker, you will have to restart the Docker daemon.

* run docker without sudo

- Add the docker group if it doesn't already exist.

	sudo groupadd docker

- Add the connected user "${USER}" to the docker group. Change the user name to match your preferred user.

	sudo gpasswd -a ${USER} docker

- Restart the Docker daemon:

	sudo service docker restart

- If the user you're adding is the same user you're currently logged in, you will need to logout and log back in, in order to have the group update take effect. For test:

	docker ps

* Docker Registry 2.0

- The old [[https://github.com/docker/docker-registry][docker-registry]] version what writed in python is deprecated.
- Docker Registry gives team members the ability to share images and deploy them to testing, staging and production environments.
- Docker Registry is the core technology behind the Docker Hub. You can run your own registry instance if you want to host your images privately. Docker Registry features:

	Pluggable storage drivers: Images can be stored in Amazon S3, Microsoft Azure or 
	the local filesystem.
	
	Webhook notifications: When an image is pushed to your registry, webhooks can fire off 
	to launch CI builds, send notifications to IRC, etc.

* Deploying a registry server

- Install docker
- Run the hello-world image from the Docker public registry. The run command automatically pulls a hello-world image from Docker's official images.

	docker run hello-world

- Start a registry on your localhost. This starts a registry on your DOCKER_HOST running on port 5000.

	docker run -p 5000:5000 registry:2.0

- List your images.

- docker pull registry:2.0

* Registry Configuration Reference


* Docker registry vs docker distribution

Docker's public registry maintains a default registry image to assist you in the deployment process. This registry image is sufficient for running local tests but is insufficient for production. For production you should configure and build your own custom registry image from the docker/distribution code.


* reference

- https://docs.docker.com/installation/centos/#installing-docker-centos-7
- http://askubuntu.com/questions/477551/how-can-i-use-docker-without-sudo
- https://docs.docker.com/registry/
- https://docs.docker.com/registry/deploying/
- https://docs.docker.com/registry/configuration/
